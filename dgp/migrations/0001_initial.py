# Generated by Django 4.1.2 on 2022-10-14 06:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LDA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("operator_name", models.CharField(max_length=64)),
                (
                    "random_seed",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100000),
                        ],
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "sample_size",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(100),
                            django.core.validators.MaxValueValidator(1000000),
                        ]
                    ),
                ),
                (
                    "feature_size",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "diction_size",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(10000),
                        ]
                    ),
                ),
                (
                    "doc_size_lower_bound",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100000),
                        ]
                    ),
                ),
                (
                    "doc_size_upper_bound",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100000),
                        ]
                    ),
                ),
                ("alpha", models.JSONField()),
                ("gamma_null", models.JSONField()),
                ("beta0", models.JSONField()),
                ("beta1", models.JSONField()),
                ("betaW", models.JSONField()),
                (
                    "wz_threshold",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(-500),
                            django.core.validators.MaxValueValidator(500),
                        ],
                    ),
                ),
                (
                    "z_gen_method",
                    models.CharField(
                        choices=[("normal", "NORMAL")], default="normal", max_length=16
                    ),
                ),
                ("z_gen_args", models.JSONField(default=dict)),
                (
                    "s_gen_method",
                    models.CharField(
                        choices=[("exact", "RANDOM EXACT"), ("bernoulli", "BERNOULLI")],
                        default="exact",
                        max_length=16,
                    ),
                ),
                ("s_gen_args", models.JSONField()),
                (
                    "h_gen_method",
                    models.CharField(
                        choices=[("linear", "LINEAR")], default="linear", max_length=32
                    ),
                ),
                ("h_gen_args", models.JSONField(default=dict)),
                ("h_covariance", models.JSONField()),
                (
                    "w_err_method",
                    models.CharField(
                        choices=[("no-err", "NO-ERR"), ("random", "RANDOM <err_rate>")],
                        default="no-err",
                        max_length=32,
                    ),
                ),
                ("w_err_args", models.JSONField(default=dict)),
                (
                    "task_status",
                    models.CharField(
                        choices=[
                            ("pending", "PENDING"),
                            ("running", "RUNNING"),
                            ("failure", "FAILURE"),
                            ("success", "SUCCESS"),
                        ],
                        default="pending",
                        max_length=8,
                    ),
                ),
                ("true_ate", models.FloatField(blank=True, null=True)),
                ("real_unobservable_rate", models.FloatField(blank=True, null=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                (
                    "err_log_info",
                    models.CharField(blank=True, max_length=1000000, null=True),
                ),
                (
                    "data_file_path",
                    models.CharField(blank=True, max_length=4096, null=True),
                ),
                (
                    "operator_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dgp_operator_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
